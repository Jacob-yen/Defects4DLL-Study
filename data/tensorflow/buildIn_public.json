{
  "tf.compat.v1.disable_eager_execution": "tf.compat.v1.disable_eager_execution",
  "tf.keras.callbacks.TensorBoard": "tf.keras.callbacks.TensorBoard",
  "tf.keras.layers.Dense": "tf.keras.layers.Dense",
  "tf.keras.Input": "tf.keras.Input",
  "tf.optimizers.SGD": "tf.optimizers.SGD",
  "tf.keras.Model": "tf.keras.Model",
  "tf.print": "tf.print",
  "tf.constant": "tf.constant",
  "tf.saved_model.save": "tf.saved_model.save",
  "tf.python.keras.models.Sequential": "tf.keras.Sequential",
  "tf.python.keras.optimizer_v2.adam.Adam": "tf.keras.optimizers.Adam",
  "tf.keras.losses.Huber": "tf.keras.losses.Huber",
  "tf.divide": "tf.divide",
  "tf.reduce_max": "tf.reduce_max",
  "tf.keras.backend.set_floatx": "tf.keras.backend.set_floatx",
  "tf.GradientTape": "tf.GradientTape",
  "tf.keras.metrics.Mean": "tf.keras.metrics.Mean",
  "tf.keras.optimizers.Adamax": "tf.keras.optimizers.Adamax",
  "tf.python.keras.layers.Input": "tf.keras.Input",
  "tf.python.keras.layers.normalization_v2.BatchNormalization": "tf.keras.layers.BatchNormalization",
  "tf.keras.metrics.Recall": "tf.keras.metrics.Recall",
  "tf.python.ops.sparse_ops.from_dense": "tf.sparse.from_dense",
  "tf.python.framework.constant_op.constant": "tf.constant",
  "tf.python.keras.layers.Dense": "tf.keras.layers.Dense",
  "tf.python.keras.losses.binary_crossentropy": "tf.keras.losses.binary_crossentropy",
  "tf.python.keras.engine.input_layer.Input": "tf.keras.Input",
  "tf.python.keras.preprocessing.image.smart_resize": "tf.keras.preprocessing.image.smart_resize",
  "tf.python.ops.array_ops.ones": "tf.ones",
  "tf.python.eager.def_function.function": "tf.function",
  "tf.python.ops.math_ops.cast": "tf.cast",
  "tf.python.ops.array_ops.boolean_mask": "tf.boolean_mask",
  "tf.python.framework.ops.control_dependencies": "tf.control_dependencies",
  "tf.python.ops.check_ops.assert_near": "tf.compat.v1.assert_near",
  "tf.python.ops.array_ops.identity": "tf.identity",
  "tf.python.ops.summary_ops_v2.create_file_writer": "tf.summary.create_file_writer",
  "tf.python.ops.summary_ops_v2.trace_on": "tf.summary.trace_on",
  "tf.python.ops.summary_ops_v2.trace_export": "tf.summary.trace_export",
  "tf.python.eager.context.executing_eagerly": "tf.executing_eagerly",
  "tf.python.keras.activations.softmax": "tf.keras.activations.softmax",
  "tf.python.keras.backend.placeholder": "tf.compat.v1.placeholder",
  "tf.python.keras.backend.function": "tf.function",
  "tf.python.keras.Input": "tf.keras.Input",
  "tf.python.keras.layers.Lambda": "tf.keras.layers.Lambda",
  "tf.ragged.stack": "tf.ragged.stack",
  "tf.keras.models.Sequential": "tf.keras.models.Sequential",
  "tf.keras.layers.Input": "tf.keras.layers.Input",
  "tf.ragged.map_flat_values": "tf.ragged.map_flat_values",
  "tf.reduce_mean": "tf.reduce_mean",
  "tf.python.ops.image_ops.central_crop": "tf.image.central_crop",
  "tf.python.ops.variables.VariableV1": "tf.Variable",
  "tf.python.framework.ops.executing_eagerly_outside_functions": "tf.compat.v1.executing_eagerly_outside_functions",
  "tf.python.keras.layers.serialize": "tf.keras.layers.serialize",
  "tf.python.keras.layers.preprocessing.text_vectorization.TextVectorization": "tf.keras.layers.TextVectorization",
  "tf.python.keras.layers.pooling.GlobalAveragePooling1D": "tf.keras.layers.GlobalAveragePooling1D",
  "tf.python.ops.math_ops.reduce_variance": "tf.math.reduce_variance",
  "tf.python.ops.ragged.ragged_factory_ops.constant": "tf.constant",
  "tf.python.ops.math_ops.range": "tf.range",
  "tf.python.keras.layers.Concatenate": "tf.keras.layers.Concatenate",
  "tf.python.ops.signal.fft_ops.fftshift": "tf.signal.fftshift",
  "tf.python.ops.array_ops.placeholder": "tf.compat.v1.placeholder",
  "tf.python.keras.layers.ReLU": "tf.keras.layers.ReLU",
  "tf.keras.Sequential": "tf.keras.Sequential",
  "tf.python.training.rmsprop.RMSPropOptimizer": "tf.compat.v1.train.RMSPropOptimizer",
  "tf.python.keras.metrics.CategoricalAccuracy": "tf.keras.metrics.CategoricalAccuracy",
  "tf.python.keras.utils.np_utils.to_categorical": "tf.keras.utils.to_categorical",
  "tf.python.ops.math_ops.reduce_sum": "tf.reduce_sum",
  "tf.python.keras.callbacks.Callback": "tf.keras.callbacks.Callback"
}