constraints:
  '**kwargs':
    dtype:
      - kwargs
    descp: ''
  activation:
    default: None
    dtype:
      - enum
    enum:
      - Linear
      - ReLU
      - Sigmoid
      - Tanh
      - Softmax
    descp: 'Activation function to use. If you don''t specify anything, no activation
      is applied (ie. "linear" activation: `a(x) = x`).'
  activity_regularizer:
    default: None
    dtype:
      - string
    descp: Regularizer function applied to the output of the layer (its "activation")..
  bias_constraint:
    default: None
    dtype:
      - string
    descp: Constraint function applied to the bias vector.
    structure:
    - list
  bias_initializer:
    default: zeros
    descp: Initializer for the bias vector.
    dtype:
    - string
    ndim:
    - '0'
  bias_regularizer:
    default: None
    dtype:
      - string
    descp: Regularizer function applied to the bias vector.
    structure:
    - list
  kernel_constraint:
    default: None
    dtype:
      - string
    descp: Constraint function applied to the `kernel` weights matrix.
  kernel_initializer:
    default: glorot_uniform
    descp: Initializer for the `kernel` weights matrix.
    dtype:
    - string
    ndim:
    - '0'
  kernel_regularizer:
    default: None
    dtype:
      - string
    descp: Regularizer function applied to the `kernel` weights matrix.
  units:
    dtype:
      - units
    descp: Positive integer, dimensionality of the output space.
  use_bias:
    default: 'True'
    descp: Boolean, whether the layer uses a bias vector.
    dtype:
    - bool
    ndim:
    - '0'
inputs:
  optional:
  - activation
  - use_bias
  - kernel_initializer
  - bias_initializer
  - kernel_regularizer
  - bias_regularizer
  - activity_regularizer
  - kernel_constraint
  - bias_constraint
  - '**kwargs'
  required:
  - units
