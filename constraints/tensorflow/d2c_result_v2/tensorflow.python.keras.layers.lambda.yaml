constraints:
  '**kwargs':
    dtype:
      - kwargs
    default: null
    descp: ''
  arguments:
    default: None
    dtype:
      - dict
    descp: 'Optional dictionary of keyword arguments to be passed to the function.
      Input shape: Arbitrary. Use the keyword argument input_shape (tuple of integers,
      does not include the samples axis) when using this layer as the first layer
      in a model. Output shape: Specified by `output_shape` argument'
    structure:
    - dict
  function:
    dtype:
      - function
    descp: The function to be evaluated. Takes input tensor as first argument.
  mask:
    default: None
    dtype:
      - tuple
    descp: Either None (indicating no masking) or a callable with the same signature
      as the `compute_mask` layer method, or a tensor that will be returned as output
      mask regardless what the input is.
  output_shape:
    default: None
    dtype:
      - tuple
    descp: 'Expected output shape from function. This argument can be inferred if
      not explicitly provided. Can be a tuple or function. If a tuple, it only specifies
      the first dimension onward; sample dimension is assumed either the same as the
      input: `output_shape = (input_shape[0], ) + output_shape` or, the input is `None`
      and the sample dimension is also `None`: `output_shape = (None, ) + output_shape`
      If a function, it specifies the entire shape as a function of the input shape:
      `output_shape = f(input_shape)`'
    structure:
    - tuple
  dynamic:
    dtype:
      - bool
inputs:
  optional:
  - output_shape
  - mask
  - arguments
  - '**kwargs'
  required:
  - function